// Code generated by Cainome. DO NOT EDIT.
// Generated from ABI file.

package basic

import (
	"math/big"
	"github.com/NethermindEth/juno/core/felt"
)

// Provider interface for StarkNet interactions
type Provider interface {
	Call(contractAddress *felt.Felt, selector *felt.Felt, calldata []*felt.Felt) ([]*felt.Felt, error)
	Invoke(contractAddress *felt.Felt, selector *felt.Felt, calldata []*felt.Felt) (string, error)
}

type Event struct {
	Variant string `json:"variant"`
	Value   interface{} `json:"value,omitempty"`
}

const (
)


type Basic struct {
	contractAddress *felt.Felt
	provider Provider // Interface for StarkNet provider
}

func NewBasic(contractAddress *felt.Felt, provider Provider) *Basic {
	return &Basic {
		contractAddress: contractAddress,
		provider: provider,
	}
}

func (basic *Basic) SetStorage(v_1 *felt.Felt, v_2 *big.Int) error {
	// TODO: Implement Invoke method for SetStorage
	panic("not implemented")
}

func (basic *Basic) ReadStorageTuple() (struct {
	Field0 *felt.Felt
	Field1 *big.Int
}, error) {
	// TODO: Implement Call method for ReadStorageTuple
	panic("not implemented")
}

