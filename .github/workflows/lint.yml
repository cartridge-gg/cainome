on:
  push:
    branches:
      - main
  pull_request:

name: Linting
jobs:
  lint-rust:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: "Setup stable toolchain"
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Use Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install prettier
        run: |
          yarn global add prettier
      - name: Check Markdown format
        run: |
          prettier --check "**/*.md"
      - name: Check Yaml format
        run: |
          prettier --check "**/*.{yaml,yml}"

      - name: Check Rust format
        run: |
          cargo fmt --all -- --check

      - name: Run Clippy lints
        run: |
          cargo clippy --all --all-targets --all-features -- -D warnings

      - name: check Rust docs
        run: |
          RUSTDOCFLAGS="-Dwarnings" cargo doc --document-private-items --no-deps --all-features --workspace

  lint-scarb:
    name: Scarb lints
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./contracts
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Compile contracts
        uses: software-mansion/setup-scarb@v1
        with:
          scarb-version: "2.10.1"
      - run: |
          make generate_artifacts && scarb fmt --check
