{
  "abi_type": [
    {
      "members": [
        {
          "name": "felt",
          "type": "core::felt252"
        },
        {
          "name": "uint256",
          "type": "core::integer::u256"
        },
        {
          "name": "uint64",
          "type": "core::integer::u64"
        },
        {
          "name": "address",
          "type": "core::starknet::contract_address::ContractAddress"
        },
        {
          "name": "class_hash",
          "type": "core::starknet::class_hash::ClassHash"
        },
        {
          "name": "eth_address",
          "type": "core::starknet::eth_address::EthAddress"
        },
        {
          "name": "tuple",
          "type": "(core::felt252, core::integer::u256)"
        },
        {
          "name": "span",
          "type": "core::array::Span::<core::felt252>"
        }
      ],
      "name": "contracts::abicov::structs::Simple",
      "type": "struct"
    },
    {
      "members": [
        {
          "name": "simple",
          "type": "contracts::abicov::structs::Simple"
        }
      ],
      "name": "contracts::abicov::structs::StructWithStruct",
      "type": "struct"
    }
  ],
  "cairo_serialized": [
    "0x123",
    "0x1c8",
    "0x0",
    "0x315",
    "0x1234567890abcdef1234567890abcdef12345678",
    "0xabcdef1234567890abcdef1234567890abcdef12",
    "0x1234567890abcdef1234567890abcdef12345678",
    "0x2a",
    "0x7b",
    "0x0",
    "0x3",
    "0x1",
    "0x2",
    "0x3"
  ],
  "cairo_serialized_size": 14,
  "description": "Struct containing another struct",
  "test_value": "StructWithStruct { simple: Simple { felt: 0x123, uint256: U256 { low: 456, high: 0 }, uint64: 789, address: ContractAddress(0x1234567890abcdef1234567890abcdef12345678), class_hash: ClassHash(0xabcdef1234567890abcdef1234567890abcdef12), eth_address: EthAddress(0x1234567890abcdef1234567890abcdef12345678), tuple: (0x2a, U256 { low: 123, high: 0 }), span: [0x1, 0x2, 0x3] } }",
  "type_name": "struct_with_struct"
}